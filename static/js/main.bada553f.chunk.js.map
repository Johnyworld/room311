{"version":3,"sources":["component/seats.js","component/Main.js","component/header.js","App.js","index.js"],"names":["ShowTotal","_ref","totalSeats","react_default","a","createElement","className","SeatsAreaBtns","id","type","name","value","htmlFor","SeatsGUI","_ref2","itemsLeft","itemsCenter","itemsRight","ShowMySeat","Seats","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomN","init","i","push","key","Math","ceil","_this2","nowN","canClick","items","document","getElementsByClassName","jsMySeat","getElementById","jsSeatRow","jsSeatCol","jsSeatSide","jsAreaCheck","getElementsByName","areaSelected","showMySeat","rowValue","colValue","idSplit","parseInt","split","innerHTML","setSeated","length","classList","contains","remove","add","thisIsMySeat","event","element","srcElement","idxSplice","indexOf","unshift","splice","addEventListener","checked","areaCheck","includes","temp","tempIndex","checkAreaChecked","numberSeat","setTimeout","areaUncheck","array","temporaryValue","randomIndex","currentIndex","floor","random","shuffle","Component","Main","state","submit","handleChange","bind","assertThisInitialized","handleSubmit","setState","target","preventDefault","onSubmit","maxLength","max","onChange","autocomplete","component_seats","console","log","_renderMain","_renderInput","Header","onClick","clickHeader","App","_clickHeader","initialSubmit","React","createRef","documentElement","touches","lastTouchEnd","now","Date","getTime","noTouchZoom","current","cancelSubmit","component_header","component_Main","ref","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.bada553f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './seats.css';\n\nclass Seats extends Component {\n    constructor(props) {\n        super(props);\n\n        this.randomN = [];\n        this.itemsCenter = [];\n        this.itemsLeft = [];\n        this.itemsRight = [];\n\n        this.init = () => {\n            for( let i=0; i<this.props.totalSeats; i++ ) {\n                this.randomN.push( i+1 );\n                if( i <= 35 ) {\n                    this.itemsCenter.push(\n                        <li className=\"item\" id={'seat-'+ (i+1)} key={i}></li>\n                    )\n                }\n                if ( i > 35 ) {\n                    Math.ceil(((i-35)/3)%2) === 1\n                        ? this.itemsLeft.push( <li className=\"item\" id={'seat-'+ (i+1)} key={i}></li> )\n                        : this.itemsRight.push( <li className=\"item\" id={'seat-'+ (i+1)} key={i}></li> )\n                }\n            }\n        }\n        this.init();\n    }\n\n    componentDidMount() {\n        const randomN = this.randomN;\n        let nowN = 0;\n        let canClick = true;\n        \n        const items = document.getElementsByClassName('item');\n        const jsMySeat = document.getElementById('jsMySeat');\n        const jsSeatRow = document.getElementById('jsSeatRow');\n        const jsSeatCol = document.getElementById('jsSeatCol');\n        const jsSeatSide = document.getElementById('jsSeatSide');\n        const jsAreaCheck = document.getElementsByName('jsAreaCheck');\n\n        let areaSelected = [];\n\n        const areaCheck = () => {\n            for ( let i=0; i<jsAreaCheck.length; i++ ) {\n                if (jsAreaCheck[i].checked) {\n                    areaSelected.push(jsAreaCheck[i].value)   \n                }\n            }\n        }\n\n        const areaUncheck = () => {\n            for ( let i=0; i<jsAreaCheck.length; i++ ) {\n                jsAreaCheck[i].checked = false;\n            }\n        }\n\n        const checkAreaChecked = (nowN) => {\n            // 앞자리 체크됐을 경우\n            if ( areaSelected.includes('front-seat')) {\n                let temp = 0;\n                let tempIndex = 0;\n                for ( let i=nowN; i<randomN.length; i++ ) {\n                    if ( randomN[i] >= 0 && randomN[i] <= 12) {\n                        if (temp) {\n                            randomN[tempIndex] = randomN[i];\n                            randomN[i] = temp;\n                        }\n                        break;\n                    } else if ( randomN[i] > 36 && randomN[i] <= 48 ) {\n                        if (temp) {\n                            randomN[tempIndex] = randomN[i];\n                            randomN[i] = temp;\n                        }\n                        break;\n                    } else {\n                        if ( !temp ) {\n                            temp = randomN[i];\n                            tempIndex = i;\n                        }\n                        continue;\n                    }\n                }\n            }\n            if ( areaSelected.includes('no-front-seat')) {\n                let temp = 0;\n                let tempIndex = 0;\n                for ( let i=nowN; i<randomN.length; i++ ) {\n                    if ( randomN[i] >= 0 && randomN[i] <= 12) {\n                        if ( !temp ) {\n                            temp = randomN[i];\n                            tempIndex = i;\n                        }\n                        continue;\n                    } else if ( randomN[i] > 36 && randomN[i] < 47 ) {\n                        if ( !temp ) {\n                            temp = randomN[i];\n                            tempIndex = i;\n                        }\n                        continue;\n                    } else {\n                        if (temp) {\n                            randomN[tempIndex] = randomN[i];\n                            randomN[i] = temp;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        const shuffle = (array) => {\n            var currentIndex = array.length, temporaryValue, randomIndex;\n          \n            while (0 !== currentIndex) {\n          \n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex -= 1;\n          \n                temporaryValue = array[currentIndex];\n                array[currentIndex] = array[randomIndex];\n                array[randomIndex] = temporaryValue;\n            }\n            return array;\n        }\n\n        \n        const showMySeat = (id) => {\n            let idSplit = parseInt(id.split('-')[1]);\n            let rowValue, colValue;\n            jsSeatSide.innerHTML = '';\n\n            rowValue = Math.ceil(idSplit /6);\n            colValue = Math.ceil(idSplit %6);\n\n            if ( colValue === 0 ) {\n                colValue = 6;\n            }\n\n            if ( rowValue > 6 ) {\n                if ( colValue > 3 ) {\n                    colValue -= 3;\n                    jsSeatSide.innerHTML = '오른쪽 ';\n                } else {\n                    jsSeatSide.innerHTML = '왼쪽 ';\n                }\n                rowValue -= 6;\n            }\n\n            jsSeatRow.innerHTML = rowValue;\n            jsSeatCol.innerHTML = colValue;\n        }\n\n        // 각 자리의 아이디값을 받아서 className을 추가해줌\n        const setSeated = (id) => {\n            for( let i=0; i<items.length; i++ ) {\n                if ( items[i].classList.contains('active') ) {\n                    items[i].classList.remove('active');\n                    items[i].classList.add('seated');\n                }\n                if (id === items[i].id ) {\n                    items[i].classList.add('active');\n                }\n            }\n        }\n        \n        // 버튼 클릭시\n        const whereIsMySeat = () => {\n            if ( canClick ) {\n                canClick = false;\n                jsMySeat.classList.add('is-delay');\n                if ( nowN < this.props.totalSeats ) {\n\n                    // 지정 자리범위 체크\n                    areaCheck();\n                    if ( areaSelected ) {\n                        checkAreaChecked(nowN);\n                    }\n\n                    // 번호 지정\n                    let numberSeat = 'seat-' + randomN[nowN];\n                    nowN++;\n\n                    // 클릭한 자리에 className 추가.\n                    setSeated(numberSeat);\n                    showMySeat(numberSeat);\n\n                    setTimeout( function() {\n                        // 연속클릭 금지 딜레이\n                        jsMySeat.classList.remove('is-delay');\n                        canClick = true;\n\n                        // 자리선택 초기화\n                        areaUncheck();\n                        areaSelected = [];\n                    }, 1500);\n                }\n            }\n        }\n\n        // 자리 클릭시\n        const thisIsMySeat = (event) => {\n            const element = event.srcElement;\n            if ( !element.classList.contains('active') && !element.classList.contains('seated') ) {\n                // 클릭한 자리에 className 추가.\n                setSeated(element.id);\n                showMySeat(element.id);\n\n                // seat-id에서 숫자만 추출.\n                let idSplit = parseInt(element.id.split('-')[1]);\n\n                // 추출한 아이디값에 해당하는 객체의 배열 내 위치값 추출.\n                let idxSplice = randomN.indexOf(idSplit)+1;\n                \n                // 클릭한 자리의 아이디값을 가진 배열 내 객체를 맨 앞으로 이동시켜서, 클릭 된 것으로 위장.\n                randomN.unshift(idSplit);\n                randomN.splice(idxSplice, 1);\n                \n                // 인덱스 추가.\n                nowN++;\n            } \n        }\n\n        for( let i=0; i<items.length; i++ ) {\n            items[i].addEventListener('click', thisIsMySeat );\n        }\n\n        jsMySeat.addEventListener('click', whereIsMySeat);\n        shuffle(randomN);\n    }\n\n    render() {\n        return (\n            <div className=\"seats-wrap\">\n                <ShowTotal totalSeats={this.props.totalSeats} />\n                <SeatsAreaBtns />\n                <SeatsGUI itemsLeft={this.itemsLeft} itemsCenter={this.itemsCenter} itemsRight={this.itemsRight} />\n                <ShowMySeat />\n                <div className=\"button-wrap\">\n                    <button className=\"btn\" id=\"jsMySeat\">내 자리는?</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction ShowTotal({totalSeats}) {\n    return ( <p className=\"show-total\">총 인원은 {totalSeats}명 입니다.</p> );\n}\n\nfunction SeatsAreaBtns() {\n    return (\n        <form className=\"seats-area\" id=\"jsSeatsArea\">\n            <input type=\"radio\" name=\"jsAreaCheck\" value=\"all-seat\" id=\"radioAll\" />\n            <label htmlFor=\"radioAll\">전체</label>\n            <input type=\"radio\" name=\"jsAreaCheck\" value=\"front-seat\" id=\"radioFront\" />\n            <label htmlFor=\"radioFront\">앞자리</label>\n            <input type=\"radio\" name=\"jsAreaCheck\" value=\"no-front-seat\" id=\"radioNoFront\" />\n            <label htmlFor=\"radioNoFront\">앞자리제외</label>\n        </form>\n    )\n}\n\nfunction SeatsGUI({ itemsLeft, itemsCenter, itemsRight }) {\n    return (\n        <div className=\"seats\">\n            <ul className=\"items left\">\n                {itemsLeft}\n            </ul>\n            <ul className=\"items center\">\n                {itemsCenter}\n            </ul>\n            <ul className=\"items right\">\n                {itemsRight}\n            </ul>\n        </div>\n    )\n}\n\nfunction ShowMySeat() {\n    return (\n        <p className=\"show-my-seat\">\n            <span id=\"jsSeatSide\"></span>\n            <span id=\"jsSeatRow\">0</span>열&nbsp;\n            <span id=\"jsSeatCol\">0</span>번째\n        </p>\n    )\n}\n\nexport default Seats;","import React, { Component } from 'react';\nimport Seats from './seats';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalSeats: this.props.totalSeats,\n            submit: this.props.submit\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({totalSeats: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.setState({totalSeats: event.target.totalSeats.value, submit: true});\n        event.preventDefault();\n    }\n\n    cancelSubmit() {\n        this.setState({ submit: false });\n    }\n\n    _renderInput() {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    인원:\n                    <input name=\"totalSeats\" type=\"type\" value={this.state.totalSeats} maxLength=\"2\" max=\"72\" onChange={this.handleChange} autocomplete=\"off\" />\n                </label>\n                <div className=\"button-wrap\">\n                    <input className=\"btn\" type=\"submit\" value=\"시작하기\" />\n                </div>\n            </form>\n        )\n    }\n\n    _renderMain() {\n        return(\n            <Seats totalSeats={this.state.totalSeats} />\n        )\n    }\n\n    render() {\n        console.log(\"Main\", this.state)\n        return (\n            <div className=\"content\">\n                { this.state.submit ? this._renderMain() : this._renderInput() }\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport './header.css';\n\nclass Header extends Component {\n    render() {\n        return(\n            <header>\n                <button onClick={()=>{this.props.clickHeader()}} type=\"type\" className=\"header-title\">ROOM 311</button>\n                <div></div>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Main from './component/Main';\nimport Header from './component/header';\n\nconst noTouchZoom = () => {\n  // 확대 방지\n  document.documentElement.addEventListener('touchstart', function (event) {\n    if (event.touches.length > 1) {\n        event.preventDefault();\n    }\n  }, false);\n\n  var lastTouchEnd = 0;\n  document.documentElement.addEventListener('touchend', function (event) {\n    var now = (new Date()).getTime();\n    if (now - lastTouchEnd <= 300) {\n      event.preventDefault();\n    }\n    lastTouchEnd = now;\n  }, false);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalSeats: 47,\n      submit: false\n    }\n    this._clickHeader = this._clickHeader.bind(this);\n    this.initialSubmit = React.createRef();\n  }\n\n  componentDidMount() {   \n    noTouchZoom();\n  }\n\n  _clickHeader() {\n    this.initialSubmit.current.cancelSubmit();\n  }\n\n  render() {\n    console.log(\"App\", this.state)\n    return (\n      <div className=\"app-wrap\">\n        <Header clickHeader={this._clickHeader} />\n        <Main totalSeats={this.state.totalSeats} submit={this.state.submit} ref={this.initialSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}